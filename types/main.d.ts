import Kth from './Kth';
import PaymentAddress from './PaymentAddress';
import Wallet from './Wallet';
import Script from './Script';
import Opcode from './Opcode';
import { OpcodeEnumNative, OpcodeEnumNativeToInt } from './wasm/glue';
import Operation from './Operation';
import RuleFork from './RuleFork';
import { RuleForkEnumNative, RuleForkEnumNativeToInt } from './wasm/glue_manual';
import { bytesToHexStr, hexStrToBytes } from './encoding';
import loadLib from './wasm/loadLib';
import { free, malloc } from './wasm/mem';
export { loadLib, Kth, PaymentAddress, Wallet, Script, Opcode, OpcodeEnumNative, OpcodeEnumNativeToInt, Operation, RuleFork, RuleForkEnumNative, RuleForkEnumNativeToInt, bytesToHexStr, hexStrToBytes, free, malloc };
declare const _default: {
    loadLib: typeof loadLib;
    Kth: typeof Kth;
    PaymentAddress: typeof PaymentAddress;
    Wallet: typeof Wallet;
    Script: typeof Script;
    Opcode: typeof Opcode;
    OpcodeEnumNativeToInt: typeof OpcodeEnumNativeToInt;
    Operation: typeof Operation;
    RuleFork: typeof RuleFork;
    RuleForkEnumNativeToInt: typeof RuleForkEnumNativeToInt;
    bytesToHexStr: typeof bytesToHexStr;
    hexStrToBytes: typeof hexStrToBytes;
    free: typeof free;
    malloc: typeof malloc;
};
export default _default;
