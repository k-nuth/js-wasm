declare const _RuleForkEnumNativeKeyToInt: {
    readonly no_rules: 0;
    readonly easy_blocks: number;
    readonly bip16_rule: number;
    readonly bip30_rule: number;
    readonly bip34_rule: number;
    readonly bip66_rule: number;
    readonly bip65_rule: number;
    readonly bip90_rule: number;
    readonly allow_collisions: number;
    readonly bip68_rule: number;
    readonly bip112_rule: number;
    readonly bip113_rule: number;
    readonly bch_uahf: number;
    readonly bch_daa_cw144: number;
    readonly bch_pythagoras: number;
    readonly bch_euclid: number;
    readonly bch_pisano: number;
    readonly bch_mersenne: number;
    readonly bch_fermat: number;
    readonly bch_euler: number;
    readonly bch_gauss: number;
    readonly bch_descartes: number;
    readonly bch_lobachevski: number;
    readonly bch_galois: number;
    readonly bch_leibniz: number;
    readonly retarget: number;
    readonly unverified: number;
    readonly bip34_activations: number;
    readonly bip9_bit0_group: number;
    readonly bip9_bit1_group: number;
    readonly all_rules: 4294967295;
};
export declare type RuleForkEnumNative = keyof typeof _RuleForkEnumNativeKeyToInt;
export declare function RuleForkEnumNativeToInt(value: RuleForkEnumNative): number;
export declare function RuleForkEnumNativeFromInt(value: number): RuleForkEnumNative | undefined;
export {};
